(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{295:function(n,e,t){"use strict";t.r(e);var i=t(38),o=Object(i.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("blockquote",[t("p",[n._v("Build a scaleable API with authentication using Express, Mongo, and Passport\nLearn the differences between cookie-based and token-based authentication\nFigure out what a Higher Order Component and how to use it to write dramatically less code\nWrite Redux middleware from scratch to uncover what is happening behind the scenes with Redux\nSet up your own testing environment with Jest and Enzyme\nRealize the power of building composable components")])]),n._v(" "),t("h4",{attrs:{id:"higher-order-components"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#higher-order-components","aria-hidden":"true"}},[n._v("#")]),n._v(" Higher Order Components")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("An Introduction to Higher Order Components")])]),n._v(" "),t("li",[t("p",[n._v("Connect - A Higher Order Component")])]),n._v(" "),t("li",[t("p",[n._v("App Overview")])]),n._v(" "),t("li",[t("p",[n._v("Adding React Router")])]),n._v(" "),t("li",[t("p",[n._v("Adding Routes")])]),n._v(" "),t("li",[t("p",[n._v("Auth Reducer")])]),n._v(" "),t("li",[t("p",[n._v("Rendering a Header")])]),n._v(" "),t("li",[t("p",[n._v("Wiring Up State")])]),n._v(" "),t("li",[t("p",[n._v("Changing Auth State")])]),n._v(" "),t("li",[t("p",[n._v("Steps for Building a HOC")])]),n._v(" "),t("li",[t("p",[n._v("Forced Navigation with React Router")])]),n._v(" "),t("li",[t("p",[n._v("Creating the HOC")])]),n._v(" "),t("li",[t("p",[n._v("Placing Reusable Logic")])]),n._v(" "),t("li",[t("p",[n._v("Passing Through Props")])])]),n._v(" "),t("h4",{attrs:{id:"middlewares-with-redux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#middlewares-with-redux","aria-hidden":"true"}},[n._v("#")]),n._v(" MIddlewares with Redux")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("Introduction to Middlewares")])]),n._v(" "),t("li",[t("p",[n._v("The Purpose of Redux Promise")])]),n._v(" "),t("li",[t("p",[n._v("How Async Middlewares Work")])]),n._v(" "),t("li",[t("p",[n._v("Crazy Middleware Syntax")])]),n._v(" "),t("li",[t("p",[n._v("Forwarding Actions")])]),n._v(" "),t("li",[t("p",[n._v("Waiting for Promise Resolution")])]),n._v(" "),t("li",[t("p",[n._v("Observing the Middleware")])]),n._v(" "),t("li",[t("p",[n._v("State Validation Middleware")])]),n._v(" "),t("li",[t("p",[n._v("JSON Schema")])]),n._v(" "),t("li",[t("p",[n._v("Generating JSON Schema")])]),n._v(" "),t("li",[t("p",[n._v("Middleware Creation")])]),n._v(" "),t("li",[t("p",[n._v("Emitting Warnings")])])]),n._v(" "),t("h4",{attrs:{id:"server-setup-authentication"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server-setup-authentication","aria-hidden":"true"}},[n._v("#")]),n._v(" Server Setup - Authentication")]),n._v(" "),t("ul",[t("li"),n._v(" "),t("li",[n._v("Client Side Auth")]),n._v(" "),t("li"),n._v(" "),t("li",[n._v("Bonus!")]),n._v(" "),t("li"),n._v(" "),t("li",[n._v("[Legacy] Testing")]),n._v(" "),t("li"),n._v(" "),t("li",[n._v("[Legacy] Test Environment Setup")]),n._v(" "),t("li"),n._v(" "),t("li",[n._v("[Legacy] Higher Order Components")]),n._v(" "),t("li"),n._v(" "),t("li",[n._v("[Legacy] Middleware")]),n._v(" "),t("li"),n._v(" "),t("li",[n._v("[Legacy] Client Side Authentication")])]),n._v(" "),t("p",[n._v('–\nGetting Started\n39:17\nIntroduction\n预览\n01:49\nWhat is React?\n预览\n02:56\nReal-World SPAs & React Web Apps\n预览\n02:28\nWriting our First React Code\n预览\n15:07\nWhy Should we Choose React?\n预览\n02:03\nReact Alternatives\n预览\n01:11\nUnderstanding Single Page Applications and Multi Page Applications\n预览\n03:38\nCourse Outline\n预览\n07:28\nHow to get the Most out of This Course\n预览\n02:29\nUseful Resources & Links\n预览\n00:08\n–\nRefreshing Next Generation JavaScript (Optional)\n45:16\nModule Introduction\n01:35\nUnderstanding "let" and "const"\n03:05\nArrow Functions\n05:27\nExports and Imports\n04:43\nUnderstanding Classes\n04:37\nClasses, Properties and Methods\n03:03\nThe Spread & Rest Operator\n06:30\nDestructuring\n03:13\nReference and Primitive Types Refresher\n04:26\nRefreshing Array Functions\n02:45\nWrap Up\n00:52\nNext-Gen JavaScript - Summary\n04:37\nJS Array Functions\n00:23\n–\nUnderstanding the Base Features & Syntax\n02:21:47\nModule Introduction\n00:38\nThe Build Workflow\n08:00\nUsing Create React App\n06:09\nUnderstanding the Folder Structure\n08:11\nUnderstanding Component Basics\n05:32\nUnderstanding JSX\n05:38\nJSX Restrictions\n03:09\nCreating a Functional Component\n08:09\nComponents & JSX Cheat Sheet\n00:52\nWorking with Components & Re-Using Them\n01:47\nOutputting Dynamic Content\n03:02\nWorking with Props\n04:07\nUnderstanding the Children Property\n02:56\nUnderstanding & Using State\n07:17\nProps & State\n01:41\nHandling Events with Methods\n03:45\nTo Which Events Can You Listen?\n02:09\nManipulating the State\n05:03\nFunction Components Naming\n00:31\nUsing the useState() Hook for State Manipulation\n13:51\nStateless vs Stateful Components\n03:08\nPassing Method References Between Components\n07:05\nAdding Two Way Binding\n06:51\nAdding Styling with Stylesheets\n05:28\nWorking with Inline Styles\n04:15\nTime to Practice - The Base Syntax\n1 问题\n[OPTIONAL] Assignment Solution\n22:28\nUseful Resources & Links\n00:03\n–\nWorking with Lists and Conditionals\n01:00:56\nModule Introduction\n01:03\nRendering Content Conditionally\n10:09\nHandling Dynamic Content "The JavaScript Way"\n04:49\nOutputting Lists (Intro)\n01:31\nOutputting Lists\n05:32\nLists & State\n04:12\nUpdating State Immutably\n02:39\nLists & Keys\n04:14\nFlexible Lists\n07:34\nWrap Up\n01:55\nTime to Practice - Lists & Conditionals\n1 问题\n[OPTIONAL] Assignment Solution\n17:17\nUseful Resources & Links\n00:01\n–\nStyling React Components & Elements\n49:10\nModule Introduction\n01:19\nOutlining the Problem Set\n01:58\nSetting Styles Dynamically\n03:19\nSetting Class Names Dynamically\n07:09\nAdding and Using Radium\n07:00\nUsing Radium for Media Queries\n05:02\nMUST READ: Enabling CSS Modules\n01:17\nEnabling & Using CSS Modules\n13:50\nMore on CSS Modules\n01:07\nAdding Pseudo Selectors\n05:08\nWorking with Media Queries\n01:58\nUseful Resources & Links\n00:03\n–\nDebugging React Apps\n19:37\nModule Introduction\n00:55\nUnderstanding Error Messages\n02:37\nFinding Logical Errors by using Dev Tools & Sourcemaps\n04:17\nThe React Developer Tools\n00:18\nWorking with the React Developer Tools\n02:18\nUsing Error Boundaries (React 16+)\n08:13\nWrap Up\n00:57\nUseful Resources & Links\n00:02\n–\nDiving Deeper into Components & React Internals\n05:30:36\nModule Introduction\n00:43\nA Better Project Structure\n07:24\nSplitting an App Into Components\n15:54\nComparing Stateless and Stateful Components\n03:46\nClass-based vs Functional Components\n05:15\nclass Component Lifecycle Overview\n05:04\nComponent Creation Lifecycle in Action\n06:46\nComponent Update Lifecycle (for props Changes)\n15:36\nComponent Update Lifecycle (for state Changes)\n03:49\nUsing useEffect() in Functional Components\n03:46\nControlling the useEffect() Behavior\n03:40\nCleaning up with Lifecycle Hooks & useEffect()\n06:48\nCleanup Work with useEffect() - Ex\n01:37\nUsing shouldComponentUpdate for Optimization\n06:45\nOptimizing Functional Components with React.memo()\n03:39\nWhen should you optimize?\n02:18\nPureComponents instead of shouldComponentUpdate\n03:35\nHow React Updates the DOM\n04:27\nRendering Adjacent JSX Elements\n09:00\nWindows Users Must Read\n00:46\nUsing React.Fragment\n01:29\nHigher Order Components (HOC) - Introduction\n04:20\nAnother Form of HOCs\n05:56\nPassing Unknown Props\n04:58\nSetting State Correctly\n05:13\nUsing PropTypes\n06:53\nUsing Refs\n07:37\nRefs with React Hooks\n04:34\nUnderstanding Prop Chain Problems\n04:56\nUsing the Context API\n10:03\ncontextType & useContext()\n05:33\nWrap Up\n01:21\nUseful Resources & Links\n00:08\nMUST READ: Legacy Lectures\n00:21\n[LEGACY] Splitting an App Into Components\n15:33\n[LEGACY] Comparing Stateless and Stateful Components\n07:20\n[LEGACY] Understanding the Component Lifecycle\n07:00\n[LEGACY] Converting Stateless to Stateful Components\n02:54\n[LEGACY] Component Creation Lifecycle in Action\n08:34\n[LEGACY] componentWillUnmount()\n00:37\n[LEGACY] Component Updating Lifecycle Hooks\n03:54\n[LEGACY] Component Updating Lifecycle in Action\n08:06\n[LEGACY] Updating Lifecycle Hooks (Triggered by State Changes)\n03:04\n[LEGACY] Performance Gains with PureComponents\n10:23\n[LEGACY] How React Updates the App & Component Tree\n02:27\n[LEGACY] Understanding React\'s DOM Updating Strategy\n04:27\n[LEGACY] Windows Users Must Read - File Downloads\n00:48\n[LEGACY] Returning Adjacent Elements (React 16+)\n09:08\n[LEGACY] React 16.2 Feature: Fragments\n00:16\n[LEGACY] Understanding Higher Order Components (HOCs)\n04:16\n[LEGACY] A Different Approach to HOCs\n05:41\n[LEGACY] Passing Unknown Props\n04:06\n[LEGACY] Using setState Correctly\n04:21\n[LEGACY] Validating Props\n06:07\n[LEGACY] Available PropTypes\n02:07\n[LEGACY] Using References ("ref")\n04:57\n[LEGACY] More on the React ref API (16.3)\n13:59\n[LEGACY] The Context API (React 16.3)\n08:17\n[LEGACY] More on the Context API (16.6)\n08:13\n[LEGACY] Updated Lifecycle Hooks (React 16.3)\n05:12\n[LEGACY] The "memo" Method (16.4)\n03:12\n[LEGACY] Wrap Up\n01:32\n[LEGACY] Useful Resources & Links\n00:03\n–\nA Real App: The Burger Builder (Basic Version)\n03:58:04\nAbout React Hooks\n00:14\nModule Introduction\n00:57\nPlanning an App in React - Core Steps\n02:32\nPlanning our App - Layout and Component Tree\n10:57\nPlanning the State\n04:13\nSetting up the Project\n04:50\nCreating a Layout Component\n10:01\nStarting Implementation of The Burger Builder Container\n05:04\nAdding a Dynamic Ingredient Component\n08:27\nAdding Prop Type Validation\n02:49\nStarting the Burger Component\n06:49\nOutputting Burger Ingredients Dynamically\n09:44\nCalculating the Ingredient Sum Dynamically\n05:10\nAdding the Build Control Component\n07:26\nOutputting Multiple Build Controls\n04:03\nConnecting State to Build Controls\n08:22\nRemoving Ingredients Safely\n07:30\nDisplaying and Updating the Burger Price\n02:28\nAdding the Order Button\n10:39\nCreating the Order Summary Modal\n13:58\nShowing & Hiding the Modal (with Animation!)\n06:59\nImplementing the Backdrop Component\n08:22\nAdding a Custom Button Component\n04:46\nImplementing the Button Component\n04:54\nAdding the Price to the Order Summary\n02:05\nAdding a Toolbar\n09:11\nUsing a Logo in our Application\n06:40\nAdding Reusable Navigation Items\n11:26\nCreating a Responsive Sidedrawer\n07:44\nWorking on Responsive Adjustments\n04:34\nMore about Responsive Adjustments\n07:18\nReusing the Backdrop\n09:11\nAdding a Sidedrawer Toggle Button\n06:27\nAdding a Hamburger Icon\n02:20\nImproving the App - Introduction\n01:11\nProp Type Validation\n01:17\nImproving Performance\n08:48\nUsing Component Lifecycle Methods\n01:48\nChanging the Folder Structure\n04:57\nWrap Up\n01:49\nUseful Resources & Links\n00:04\n–\nReaching out to the Web (Http / Ajax)\n56:27\nModule Introduction\n01:03\nUnderstanding Http Requests in React\n01:35\nUnderstanding our Project and Introducing Axios\n04:15\nCreating a Http Request to GET Data\n05:29\nRendering Fetched Data to the Screen\n03:46\nTransforming Data\n02:40\nMaking a Post Selectable\n04:01\nFetching Data on Update (without Creating Infinite Loops)\n07:56\nPOSTing Data to the Server\n03:52\nSending a DELETE Request\n02:23\nFixing a Bug\n00:33\nHandling Errors Locally\n03:23\nAdding Interceptors to Execute Code Globally\n06:18\nRemoving Interceptors\n00:12\nSetting a Default Global Configuration for Axios\n03:10\nCreating and Using Axios Instances\n05:03\nWrap Up\n00:47\nUseful Resources & Links\n00:01\n–\nBurger Builder Project: Accessing a Server\n57:05\nModule Introduction\n01:52\nFirebase & The Right Database\n00:06\nCreating the Firebase Project\n03:26\nCreating the Axios Instance\n02:42\nSending a POST Request\n07:46\nDisplaying a Spinner while Sending a Request\n09:20\nHandling Errors\n12:04\nRetrieving Data from the Backend\n11:22\nRemoving Old Interceptors\n08:24\nUseful Resources & Links\n00:02\n–\nMulti-Page-Feeling in a Single-Page-App: Routing\n02:03:00\nModule Introduction\n00:51\nRouting and SPAs\n02:43\nSetting Up Links\n04:22\nSetting Up the Router Package\n04:46\nreact-router vs react-router-dom\n00:21\nPreparing the Project For Routing\n05:13\nSetting Up and Rendering Routes\n05:18\nRendering Components for Routes\n01:57\nSwitching Between Pages\n02:17\nUsing Links to Switch Pages\n04:03\nUsing Routing-Related Props\n03:12\nThe "withRouter" HOC & Route Props\n03:44\nAbsolute vs Relative Paths\n02:34\nAbsolute vs Relative Paths (Article)\n01:01\nStyling the Active Route\n05:55\nPassing Route Parameters\n06:54\nExtracting Route Parameters\n03:03\nParsing Query Parameters & the Fragment\n00:59\nUsing Switch to Load a Single Route\n03:33\nNavigating Programmatically\n03:25\nAdditional Information Regarding Active Links\n02:22\nUnderstanding Nested Routes\n07:55\nCreating Dynamic Nested Routes\n04:38\nRedirecting Requests\n02:45\nConditional Redirects\n02:47\nUsing the History Prop to Redirect (Replace)\n02:49\nWorking with Guards\n03:46\nHandling the 404 Case (Unknown Routes)\n03:02\nLoading Routes Lazily\n11:49\nLazy Loading with React Suspense (16.6)\n09:47\nRouting and Server Deployment\n04:19\nTime to Practice - Routing\n1 问题\nWrap Up\n00:49\nUseful Resources & Links\n00:01\n–\nAdding Routing to our Burger Project\n01:18:50\nModule Introduction\n01:35\nBuilding the Checkout Container\n11:32\nSetting Up Routing & Routes\n04:41\nNavigating to the Checkout Page\n04:50\nNavigating Back & To Next Page\n03:33\nPassing Ingredients via Query Params\n05:27\nNavigating to the Contact Data Component\n09:33\nOrder Submission & Passing Data Between Pages\n11:44\nAdding an Orders Page\n05:34\nImplementing Navigation Links\n05:35\nFetching Orders\n06:03\nOutputting the Orders\n07:34\nWrap Up\n01:07\nUseful Resources & Links\n00:02\n–\nForms and Form Validation\n01:11:48\nModule Introduction\n00:49\nAnalyzing the App\n01:49\nCreating a Custom Dynamic Input Component\n11:30\nSetting Up a JS Config for the Form\n07:34\nDynamically Create Inputs based on JS Config\n05:23\nAdding a Dropdown Component\n03:52\nHandling User Input\n07:43\nHandling Form Submission\n04:11\nAdding Custom Form Validation\n08:09\nFixing a Common Validation Gotcha\n01:18\nAdding Validation Feedback\n05:12\nImproving Visual Feedback\n02:18\nShowing Error Messages\n00:41\nHandling Overall Form Validity\n07:35\nWorking on an Error\n02:09\nFixing a Bug\n01:26\nUseful Resources & Links\n00:09\n–\nRedux\n02:01:48\nModule Introduction\n01:00\nUnderstanding State\n01:50\nThe Complexity of Managing State\n02:42\nUnderstanding the Redux Flow\n05:17\nSetting Up Reducer and Store\n07:09\nDispatching Actions\n06:44\nAdding Subscriptions\n02:47\nConnecting React to Redux\n03:39\nConnecting the Store to React\n08:19\nDispatching Actions from within the Component\n05:53\nTime to Practice - Dispatching Actions\n1 问题\nPassing and Retrieving Data with Action\n04:06\nSwitch-Case in the Reducer\n03:00\nUpdating State Immutably\n13:20\nUpdating Arrays Immutably\n08:39\nImmutable Update Patterns\n03:08\nOutsourcing Action Types\n05:19\nCombining Multiple Reducers\n10:18\nUnderstanding State Types\n04:50\nTime to Practice - Redux Basics\n1 问题\n[OPTIONAL] Assignment Solution\n14:23\nCombining Local UI State and Redux\n07:39\nWrap Up\n01:42\nUseful Resources & Links\n00:03\n–\nAdding Redux to our Project\n49:55\nModule Introduction\n05:26\nInstalling Redux and React Redux\n04:08\nBasic Redux Setup\n02:10\nFinishing the Reducer for Ingredients\n06:35\nConnecting the Burger Builder Container to our Store\n09:33\nWorking on the Total Price Calculation\n06:05\nRedux & UI State\n04:08\nAdjusting Checkout and Contact Data\n09:10\nWrap Up\n02:38\nUseful Resources & Links\n00:02\n–\nRedux Advanced\n01:08:34\nModule Introduction\n00:28\nAdding Middleware\n07:47\nUsing the Redux Devtools\n07:32\nExecuting Asynchronous Code - Introduction\n01:52\nIntroducing Action Creators\n04:11\nAction Creators & Async Code\n06:20\nHandling Asynchronous Code\n08:13\nRestructuring Actions\n06:55\nWhere to Put Data Transforming Logic?\n05:42\nUsing Action Creators and Get State\n03:27\nUsing Utility Functions\n07:20\nA Leaner Switch Case Statement\n03:14\nAn Alternative Folder Structure\n02:22\nDiving Much Deeper\n02:07\nWrap Up\n01:00\nUseful Resources & Links\n00:04\n–\nRedux Advanced: Burger Project\n01:44:22\nModule Introduction\n01:12\nInstalling the Redux Devtools\n02:56\nPreparing the Folder Structure\n03:06\nCreating Action Creators\n06:15\nExecuting Asynchronous Code\n04:05\nFetching Ingredients Asynchronously\n07:50\nInitializing Ingredients in the BurgerBuilder\n05:18\nChanging the Order of our Ingredients Manually\n02:12\nAdding Order Actions\n06:40\nConnecting Contact Data Container & Actions\n04:18\nThe Order Reducer\n05:30\nWorking on Order Actions\n04:28\nRedirect to Improve UX\n03:08\nCombining Reducers\n04:53\nHandling Purchases & Updating the UI\n08:34\nResetting the Price after Purchases\n01:44\nFetching Orders (via Redux)\n13:45\nChecking our Implemented Functionalities\n01:23\nRefactoring Reducers\n08:11\nRefactoring Reducers Continued\n07:55\nWrap Up\n00:57\nUseful Resources & Links\n00:02\n–\nAdding Authentication to our Burger Project\n02:25:20\nModule Introduction\n01:14\nUnderstanding Authentication in Single Page Applications\n03:01\nRequired App Adjustments\n00:53\nAdding an Auth Form\n13:11\nAdding Actions\n06:28\nGetting a Token from the Backend\n06:59\nAdding Sign-In\n05:30\nStoring the Token\n09:00\nAdding a Spinner\n06:03\nLogging Users Out\n06:50\nAccessing Protected Resources\n11:17\nUpdating the UI Depending on Auth State\n07:32\nAdding a Logout Link\n06:53\nForwarding Unauthenticated Users\n08:18\nRedirecting the User to the Checkout Page\n13:12\nPersistent Auth State with localStorage\n14:36\nFixing Connect + Routing Errors\n06:58\nEnsuring App Security\n02:50\nGuarding Routes\n05:34\nDisplaying User Specific Orders\n08:16\nWrap Up\n00:43\nUseful Resources & Links\n00:02\n–\nImproving our Burger Project\n27:42\nModule Introduction\n00:40\nFixing the Redirect to the Frontpage\n05:48\nUsing updateObject in the Entire App\n06:45\nSharing the Validation Method\n02:16\nUsing Environment Variables\n02:36\nRemoving console.log()s\n03:47\nAdding Lazy Loading\n04:58\nWrap Up\n00:50\nUseful Resources & Links\n00:02\n–\nTesting\n48:38\nModule Introduction\n01:12\nWhat is Testing?\n03:08\nRequired Testing Tools\n02:26\nWhat To Test?\n02:50\nWriting our First Test\n12:34\nTesting Components Continued\n04:05\nJest and Enzyme Documentations\n06:28\nTesting Components Correctly\n02:28\nTesting Containers\n06:50\nHow to Test Redux\n05:09\nWrap Up\n01:27\nUseful Resources & Links\n00:01\n–\nDeploying the App to the Web\n10:41\nModule Introduction\n00:33\nDeployment Steps\n02:58\nBuilding the Project\n02:20\nExample: Deploying on Firebase\n04:06\nWrap Up\n00:42\nUseful Resources & Links\n00:02\n–\nBonus: Working with Webpack\n01:07:44\nModule Introduction\n01:24\nImportant: Use Webpack 3\n00:16\nIntroducing Webpack\n01:14\nHow Webpack works\n02:40\nBasic Workflow Requirements\n01:35\nProject & npm Setup\n03:47\nCreating a Basic Folder & File Structure\n03:12\nCreating the Basic React Application\n10:55\nInstalling Production Dependencies\n01:26\nSetting Up the Basic Webpack Config\n06:38\nAdding File Rules\n03:17\nIntroducing Babel\n04:52\nAdding CSS File Support\n06:19\nCreating Rules for Images\n03:23\nLazy Loading\n05:10\nInjecting the Script into the index.html File\n04:17\nCreating the Production Workflow\n05:38\nWrap Up\n01:00\nAdding babel-polyfill\n00:39\nUseful Resources & Links\n00:02\n–\nBonus: Next.js\n34:34\nModule Introduction\n01:12\nUnderstanding Server Side Rendering\n03:18\nSetting Up a Project\n06:02\nUnderstanding the Basics\n03:53\nNext.js & Components & Pages\n02:48\nStyling our App in Next.js\n02:47\nHandling (404) Errors\n02:01\nA Special Lifecycle Hook\n09:33\nDeploying our App\n02:59\nUseful Resources & Links\n00:01\n–\nBonus: Animations in React Apps\n01:07:33\nModule Introduction\n01:07\nPreparing the Demo Project\n06:12\nUsing CSS Transitions\n04:34\nUsing CSS Animations\n05:32\nCSS Transition & Animations Limitations\n04:04\nUsing ReactTransitionGroup\n12:19\nUsing the Transition Component\n03:24\nWrapping the Transition Component\n03:16\nAnimation Timings\n03:14\nTransition Events\n02:33\nThe CSSTransition Component\n05:23\nCustomizing CSS Classnames\n02:30\nAnimating Lists\n06:53\nAlternative Animation Packages\n04:29\nWrap Up\n01:57\nUseful Resources & Links\n00:06\n–\nBonus: A Brief Introduction to Redux Saga\n01:15:50\nModule Introduction\n01:29\nInstalling Redux Saga\n02:40\nCreating our First Saga\n06:06\nHooking the Saga Up (to the Store and Actions)\n04:42\nMoving Logic from the Action Creator to a Saga\n05:57\nMoving More Logic Into Sagas\n10:02\nHandling Authentication with a Saga\n11:07\nHandling Auto-Sign-In with a Saga\n05:53\nMoving the BurgerBuilder Side Effects into a Saga\n07:01\nMoving the Orders Side Effects into Sagas\n12:34\nWhy Sagas can be Helpful\n01:17\nDiving Deeper into Sagas\n06:55\nUseful Resources & Links\n00:07\n–\nReact Hooks\n04:55:42\nIntroduction\n00:40\nWhat are "React Hooks"?\n07:08\nThe Starting Project\n04:57\nGetting Started with useState()\n09:20\nMore on useState() & State Updating\n11:54\nArray Destructuring\n02:34\nMultiple States\n03:47\nRules of Hooks\n02:20\nPassing State Data Across Components\n07:56\nTime to Practice: Hooks Basics\n1 问题\nSending Http Requests\n07:16\nuseEffect() & Loading Data\n08:06\nUnderstanding useEffect() Dependencies\n02:21\nMore on useEffect()\n09:37\nWhat\'s useCallback()?\n05:28\nWorking with Refs & useRef()\n05:21\nCleaning Up with useEffect()\n03:21\nDeleting Ingredients\n02:28\nLoading Errors & State Batching\n08:48\nMore on State Batching & State Updates\n00:36\nUnderstanding useReducer()\n09:43\nUsing useReducer() for the Http State\n10:40\nWorking with useContext()\n08:27\nPerformance Optimizations with useMemo()\n10:30\nGetting Started with Custom Hooks\n13:45\nSharing Data Between Custom Hooks & Components\n14:58\nUsing the Custom Hook\n08:11\nWrap Up\n03:05\nWhat\'s [LEGACY]?\n00:15\n[LEGACY] What are Hooks?\n03:09\n[LEGACY] Enabling Hooks\n00:56\n[LEGACY] The useState() Hook\n08:51\n[LEGACY] Adding Array Destructuring\n02:09\n[LEGACY] Using Multiple State\n04:48\n[LEGACY] Using One State Instead\n03:58\n[LEGACY] The "Rules of Hooks"\n01:59\n[LEGACY] Sending Data via Http\n03:21\n[LEGACY] The useEffect() Hook\n06:26\n[LEGACY] Controlling Effect Execution\n03:41\n[LEGACY] Effect Cleanup\n06:10\n[LEGACY] Converting the "App" Component\n08:14\n[LEGACY] The useContext() Hook\n10:32\n[LEGACY] State and Effects Gotchas\n07:55\n[LEGACY] The useReducer() Hook\n08:21\n[LEGACY] useReducer() vs useState()\n04:42\n[LEGACY] Working with References and useRef()\n04:08\n[LEGACY] Preparing & Optimizing\n07:14\n[LEGACY] Avoiding Unnecessary Re-Rendering\n03:44\n[LEGACY] How to think about Functional Components with Hooks\n01:56\n[LEGACY] Creating a Custom Hook\n08:27\n[LEGACY] Wrap Up\n01:28\n–\nUsing Hooks in the Burger Builder\n01:04:34\nIntroduction\n01:08\nConverting '),t("App",[n._v("\n03:28\nRouting with React.lazy()\n03:35\nConverting the Layout Component\n02:39\nConverting withErrorHandler HOC\n05:26\nAdjusting the Order & Checkout Containers\n04:28\nAdd Hooks to ContactData\n05:38\nConverting the BurgerBuilder Container\n04:25\nAdjusting Auth & Logout Components\n06:01\nUsing React.memo() & More!\n04:30\nAdding a Custom Error Handling Hook\n05:40\nSetting the right useEffect() Dependencies\n04:58\nWorking with useSelector() and useDispatch()\n11:33\nWrap Up\n01:03\nUseful Resources & Links\n00:02\n–\nBonus: Replacing Redux with React Hooks\n54:02\nModule Introduction\n00:48\nStarting Project & Why You Would Replace Redux\n04:19\nAlternative: Using the Context API\n07:13\nToggling Favorites with the Context API\n05:43\nContext API Summary (and why NOT to use it instead of Redux)\n02:30\nGetting Started with a Custom Hook as a Store\n08:11\nFinishing the Store Hook\n05:53\nCreating a Concrete Store\n04:11\nUsing the Custom Store\n05:40\nCustom Hook Store Summary\n03:13\nOptimizing the Custom Hook Store\n04:04\nBonus: Managing Multiple State Slices with the Custom Store Hook\n00:10\nWrap Up\n02:00\nUseful Resources & Links\n00:07\n–\nBonus: Building the Burger CSS\n24:55\nBuilding the Burger CSS Code\n24:55\n–\nNext Steps and Course Roundup\n21:51\nModule Introduction\n01:00\nReact Rocks! Where to find more Examples\n01:24\nMore Inspiration: Real-World Projects Built with React\n01:23\nStatic React Apps with Gatsby.js\n02:31\nIntroducing React Native\n02:17\nComponent Libraries (Example: Material UI)\n02:36\nSmaller Apps with Preact\n03:08\nComparing React with Preact\n05:50\nCongratulations\n01:16\nBonus: More Content!\n00:26")])],1)])},[],!1,null,null,null);e.default=o.exports}}]);